name: "Publish package"

on:
  workflow_dispatch:
    inputs:
        pypi:
          description: Force to pypi
          type: boolean
          default: false
        testpypi:
          description: Force to testpypi
          type: boolean
          default: false
  push:
    branches: [main]

jobs:

  test:
    uses: ./.github/workflows/test.yml

  publish-auto:
    if: ${{ (github.event.inputs.testpypi == 'false' && github.event.inputs.pypi == 'false') || github.event_name == 'push' }}
    needs: test
    runs-on: ubuntu-latest
    steps:

      - uses: actions/checkout@v2

      - name: Fetch repo name
        id: repo_name
        run: echo "::set-output name=value::$(echo '${{ github.repository }}' | awk -F '/' '{print $2}')"

      - id: get_status
        name: get_status
        uses: ./.github/actions/get_status
        with:
         package_name: ${{ steps.repo_name.outputs.value }}

      - name: Build and publish to pypi
        if: ${{ steps.get_status.outputs.remote_exists == 'true' && steps.get_status.outputs.version_difference == 'true'}}
        uses: JRubics/poetry-publish@v1.11
        with:
          pypi_token: ${{ secrets.PYPI_TOKEN }}

  publish-manual:
    if: ${{ github.event.inputs.testpypi == 'true' || github.event.inputs.pypi == 'true' }}
    needs: test 
    runs-on: ubuntu-latest
    steps:

      - uses: actions/checkout@v2

      - name: Build and publish to pypi
        if: ${{ github.event.inputs.testpypi == 'false' }}
        uses: JRubics/poetry-publish@v1.11
        with:
          pypi_token: ${{ secrets.PYPI_TOKEN }}

      - name: Build and publish to testpypi
        if: ${{ github.event.inputs.testpypi == 'true' }}
        uses: JRubics/poetry-publish@v1.11
        with:
          pypi_token: ${{ secrets.TEST_PYPI_TOKEN }}
          repository_name: "testpypi"
          repository_url: "https://test.pypi.org/legacy/"